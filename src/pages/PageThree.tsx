/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, OrthographicCamera } from "@react-three/drei";
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";

const PageThree = ()=> {
  try{
    // const loader = new GLTFLoader();
    // loader.load("/untitled_copy.gltf", (gltf) => {
    //   console.log(gltf)
    // })
    const gltf = useGLTF("asset/three/untitled_copy.gltf");
    // let json = JSON.parse( "untitled_copy.gltf" );	
    
    console.log(gltf)
  }catch(err){
   // pass
   console.log("falied")
   console.debug(err)
  }
  return (
    <div>
        {/* <group position={[-116.74, 55.5, 42.43]}>
          <mesh
            castShadow
            receiveShadow
            // geometry={nodes.Text.geometry}
            // material={nodes.Text.material}
          />
        </group>
        <group position={[43, 201, -143]} scale={0.75}>
          <group position={[72.37, 225.81, -70.45]}>
            <mesh
              castShadow
              receiveShadow
              // // geometry={nodes.Torus.geometry}
              // // material={nodes.Torus.material}
              position={[-1.15, -0.9, 0]}
              rotation={[1.34, 0.26, 0.12]}
              scale={[0.08, 0.1, 0.12]}
            />
            <mesh
              castShadow
              receiveShadow
              // // geometry={nodes.Torus_2.geometry}
              // // material={nodes.Torus_2.material}
              position={[1.55, 0, 0.42]}
              rotation={[2.72, 0.28, -1.69]}
              scale={[0.1, 0.07, 0.11]}
            />
          </group>
          <group position={[-74.18, 225.88, -70.08]}>
            <mesh
              castShadow
              receiveShadow
              // // geometry={nodes.Torus_1.geometry}
              // // material={nodes.Torus_1.material}
              position={[0, -1.4, -0.57]}
              rotation={[0.29, 0.95, 1.67]}
              scale={[0.08, 0.1, 0.12]}
            />
            <mesh
              castShadow
              receiveShadow
              // // geometry={nodes.Torus_2_1.geometry}
              // // material={nodes.Torus_2_1.material}
              position={[-0.01, 1.21, 0.65]}
              rotation={[-2.56, 0.89, 3.1]}
              scale={[0.1, 0.07, 0.11]}
            />
          </group>
          <group position={[72.45, 225.81, 71.91]}>
            <mesh
              castShadow
              receiveShadow
              // // geometry={nodes.Torus_3.geometry}
              // // material={nodes.Torus_3.material}
              position={[-1.17, -0.9, 0]}
              rotation={[1.79, 0.26, 3.03]}
              scale={[-0.08, 0.1, 0.12]}
            />
            <mesh
              castShadow
              receiveShadow
              // // geometry={nodes.Torus_2_2.geometry}
              // // material={nodes.Torus_2_2.material}
              position={[1.54, 0, -0.42]}
              rotation={[0.43, 0.27, -1.45]}
              scale={[-0.1, 0.07, 0.11]}
            />
          </group>
          <group position={[-74.12, 225.88, 71.03]}>
            <mesh
              castShadow
              receiveShadow
              // // geometry={nodes.Torus_4.geometry}
              // // material={nodes.Torus_4.material}
              position={[0, -1.4, 0.56]}
              rotation={[2.53, 1.03, 2.05]}
              scale={[-0.08, 0.1, 0.12]}
            />
            <mesh
              castShadow
              receiveShadow
              // // geometry={nodes.Torus_2_3.geometry}
              // // material={nodes.Torus_2_3.material}
              position={[0, 1.21, -0.66]}
              rotation={[-0.56, 0.89, 0.04]}
              scale={[-0.1, 0.07, 0.11]}
            />
          </group>
          <mesh
            castShadow
            receiveShadow
            // // geometry={nodes.ring_back_right.geometry}
            // // material={nodes.ring_back_right.material}
            position={[73.24, 225.88, -73.28]}
            rotation={[1.64, 0, -Math.PI]}
            scale={[-1.07, 1.07, 1.07]}
          />
          <mesh
            castShadow
            receiveShadow
            // // geometry={nodes.ring_back_left.geometry}
            // // material={nodes.ring_back_left.material}
            position={[-74.04, 225.88, -73.3]}
            rotation={[1.64, 0, -Math.PI]}
            scale={[-1.07, 1.07, 1.07]}
          />
          <mesh
            castShadow
            receiveShadow
            // // geometry={nodes.ring_front_right.geometry}
            // // material={nodes.ring_front_right.material}
            position={[73.3, 225.88, 74.75]}
            rotation={[1.5, 0, 0]}
            scale={1.07}
          />
          <mesh
            castShadow
            receiveShadow
            // // geometry={nodes.ring_front_left.geometry}
            // // material={nodes.ring_front_left.material}
            position={[-73.99, 225.88, 74.25]}
            rotation={[1.5, 0, 0]}
            scale={1.07}
          />
          <mesh
            castShadow
            receiveShadow
            // // geometry={nodes.handle_front.geometry}
            // // material={nodes.handle_front.material}
            position={[-0.56, 88.51, 111.4]}
            rotation={[-0.08, -0.04, -1.57]}
            scale={[-1.35, 1.18, 1.22]}
          />
          <mesh
            castShadow
            receiveShadow
            // // geometry={nodes.handle_back.geometry}
            // // material={nodes.handle_back.material}
            position={[-0.49, 88.51, -110.19]}
            rotation={[-3.06, -0.03, -1.57]}
            scale={[1.35, 1.18, 1.22]}
          />
          <mesh
            castShadow
            receiveShadow
            // // geometry={nodes.bag.geometry}
            // // material={nodes.bag.material}
            position={[0.05, 24.52, 0.4]}
            scale={[0.78, 1, 0.2]}
          />
        </group>
        <OrthographicCamera
          makeDefault={false}
          far={100000}
          near={-100000}
          position={[-1009.34, 55.18, 40.76]}
          rotation={[0, -Math.PI / 2, 0]}
        />
        <directionalLight
          intensity={0.2}
          // decay={2}
          position={[138.73, 169.47, -75.64]}
          rotation={[-1.99, 0.64, 0.26]}
        />
        <directionalLight
          intensity={1}
          // decay={2}
          position={[-129.8, 169.47, 157.37]}
          rotation={[-0.82, -0.51, 0.43]}
        />
        <mesh
          castShadow
          receiveShadow
          // // geometry={nodes.Floor.geometry}
          // // material={nodes.Floor.material}
          rotation={[-Math.PI / 2, 0, 0]}
        /> */}
    </div>
  );
}

// useGLTF.preload("/untitled_copy.gltf");

export default PageThree;